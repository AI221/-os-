print"One moment please..."
--capture shellAPI
shellAPI = shell
if window or multishell then 
  sleep(0)
  --tlco
  local a = _G.printError
  function _G.printError()--when the bios goes to print the error, we run our code
    _G.printError=a
    --no multishell
    term.redirect(term.native())
    multishell = nil
    _G.window = nil
    local err = loadfile("run",theEnv)
    local env = setmetatable({}, {__index=_G})
    env["shell"] = shellAPI
    if type(err) == "function" then
      setfenv(err, env)
      err()
    else
      print(err)
      print"Press any key to continue. You will be allowed CraftOS access after you input your password."
      os.pullEvent"key"
      os.run({},"/library/pswd")
      local err = loadfile("rom/programs/shell",theEnv)
      local env = setmetatable({}, {__index=_G})
      env["shell"] = shellAPI
      if type(err) == "function" then
        setfenv(err, env)
        err()
      else
        print"Shell refused to execute. Your next inputs will be ran as a program, including args:"
        while true do shell.run(read()) end
      end
    end
  end
  os.queueEvent"terminate"--cause the shell to terminate
else 
  os.run({},"/run") --their cc version does not have multshell
end
