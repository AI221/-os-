--[[
local debug = true
--]]
local args = {}
local pArgs = {...}
if pArgs[1]=="bypass" then 
  osStuff ={}
  args={"nosplash","","nopass","stop"}
end

pcall(function()
  if debug then 
    args = {"nosplash","","nopass"}
  end
  --run the osStuff api 
  --use os.run() instead
  
  local osS,err=loadfile("library/osStuff") 
  local env={}
  local a = _G
  a["shell"] = shell
  a["osStuff"]=osStuff
  setmetatable(env,{__index=a})
  if type(osS)=="function" and (not err) then 
    if type(osS)=="function" then 
      setfenv(osS,env)
      ok,err=pcall(osS,unpack(args))
    else 
      ok,err = false,osS 
    end
  end
  if ok then 
    local newshell,err=loadfile"library/executable"
    if type(newshell)=="function" and (not err) then 
      if type(newshell)=="function" then 
        setfenv(newshell,env)
        ok,err=pcall(newshell,unpack(args))
      else 
        ok,err = false,newshell 
      end
    end
  end
  if pArgs[1]=="bypass" then 
    return 
  end 
  if term.isColor then 
    sleep(2)
    term.clearLine()
    term.setTextColor(colors.white)
    term.setBackgroundColor(colors.blue)
    term.clear()
    term.setBackgroundColor(colors.white)
    term.setTextColor(colors.blue)
    term.setCursorPos(1,5)

    local function cWrite(text)
      if type(text)=="string" then
        local _,y=term.getCursorPos()
        term.setCursorPos((term.getSize()-#text)/2,y)
        write(text)
      end
    end
    local function cPrint(text)
      cWrite(text)
      local _,y=term.getCursorPos()
      term.setCursorPos(1,y+1)
    end
    cPrint"A FATAL ERROR OCCURED"
    print()
    term.setBackgroundColor(colors.blue)
    term.setTextColor(colors.white)
    print()
    print"One or more issues have caused the shell to crash."
    cPrint"Your session cannot be resumed"
    cPrint"Any global variables CAN be retrieved"
    cPrint"Please submit this issue to Github."
    cPrint"Apologizes for the inconvience."
    print()print()
    cPrint"Press R to restart or C to launch CraftOS"
    local _,y=term.getSize()
    term.setCursorPos(1,y-2)
    cPrint"Error:"
    write(err or "")
  else
    print("Error: "..er)
  end
  term.setCursorBlink(true)
  while true do
    local _,butto=os.pullEvent"char"
    butto=string.lower(butto)
    if butto == "r" then
      os.reboot()
    elseif butto == "c" then
      --ripped from startup
      local shellR,realerr = loadfile("rom/programs/shell")
      local env = setmetatable({}, {__index=_G})
      env["shell"] = shell
      if type(shellR) == "function" then
        setfenv(shellR, env)
        local shl, shler = pcall(shellR)
        game.l"run"
      elseif realerr then 
        print(realerr)
      end
      print(shl)
      print(shler)
      print"CraftOS broke... You are not very lucky."
      print"R to restart, C to relaunch."
    end  
  end
end 
)
--[[pcall(function() print" run has crashed. running shell." end)
os.run({},'rom/programs/shell')this 'fix' causes a weird bug. startup has a failsafe anyway.]]
