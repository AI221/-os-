--By Jackson McNeill
local args = {...}
if not (args[1] and args[2] and args[3]) then 
	print(osStuff.g"meditUsage")
	return 
end
args[1] = "/"..fs.combine(shell.dir(),args[1])
if not fs.exists(args[1]) then 
	print(osStuff.g"fileNoExist")
	return 
end 
local function _meta(name,a,b,c,d,e,pass)
	local a = osStuff.writeMeta(name,a,b,c,d,e,pass)
	if a == true then 
		print"Wrote successfully!"
	elseif a== false then 
		print"Password incorrect!"
	elseif a=="You do not have permission to access this file!" then 
		print"You do not have permission to access this file!"
	end
end 
function meta(file,name,auth,ftype,times)
	local a = osStuff.appMeta(file,name,auth,ftype,times)
	if a == true then 
		print"Wrote successfully!"
	elseif a== false then 
		print"Password incorrect!"
	elseif a=="You do not have permission to access this file!" then 
		print"You do not have permission to access this file!"
	end
end 
local password 
if fs.isReadOnly(args[1])  or args[2] == "permissions" then 
	term.write"Password: "
	password = read"*" 
	if args[2]=="permissions" then 
		if not args[4] then 
			print(osStuff.g"meditUsage")
			return 
		end 
		local _table = {}
		if args[4] == "readwrite" then 
			_table[args[3]] = 2
		elseif args[4] == "readonly" then 
			_table[args[3]] = 1 
		elseif args[4]=="none" then 
		    _table[args[3]] = 0
		else 
			printError"Invalid permission level!"
			return 
		end
		_meta(args[1],nil,nil,nil,nil,_table,password)--file,name,auth,ftype,times,perm,pass
	end 
end 
if args[2]=="name" then 
	if password then 
		_meta(args[1],args[3],nil,nil,nil,nil,password)
	else 
		meta(args[1],args[3])
	end 
elseif args[2]=="author" then 
	if password then 
		_meta(args[1],nil,args[3],nil,nil,nil,password)
	else 
		meta(args[1],nil,args[3])
	end 
elseif args[2]=="type" then 
	if password then 
		_meta(args[1],nil,nil,args[3],nil,nil,password) 
	else 
		meta(args[1],nil,nil,args[3])
	end
end 
