--[[
United States English language file.
Localized by Jackson McNeill
This file recommended to be used as a template for other languages.
]]
--General things
entUsr = "Please enter username:"
usrNoExist = "User does not exist!"
accountNoExist = "Account does not exist."
noHasPass = "You have no password. Delete library/usr/ and reboot to make one."--no longer in use
outAttempt = "Out of attempts."
noPassFound = "No password found. Please create a password, or leave blank for none:"
attempt = "Attempt "
plzentpass = "Please enter password: "
noPerm = "Permission Denied"
noPermExist="Permission Denied/does not exist"
badpass = "Incorrect password!"
file = "file"
File = "File"
fileNoExist = "File does not exist"
Nil="nil"
noExist =" does not exist"
-- Sudo stuff
sudo = {}
sudo.usage = "Usage: sudo [file] - Runs a file, and gives it the privilage level of your account."
sudo.npa1 = "You do not have permission to access "
sudo.npa2="!\nIf you are an administrator, change this with medit."
sudo.noexistordir = "does not exist or was a directory!"
-- Medit
medit = {}
medit.usage = "Usage: medit [-r] file/folder, name/author/type/permissions, admin/app/guest/setTo [permission level] \nPermissions are: readwrite - Unrestricted; readonly - Read-only; none - No reading or writing on this file.\n-r will recurse file permissions into subdirectories, meaning you also specify is a folder rather than a file."
medit.sucwrit = "Wrote successfully!"
medit.badPermLev = "Invalid permission level!"
medit.wantFolder = " was given, expected folder."
-- Stat
stat = {}
stat.usage = "Usage: stat[file/folder]\nReturns: Metadata for that file or folder."
stat.noMeta = "No metadata found"
stat.noAc = "No access"
stat.readonly = "Read-only"
stat.readwrite = "Read & write"
stat.name = "Name: "
stat.author = "Author: "
stat.type="Type: "
stat.cnd = "Created: Day: "
stat.time = " Time: "
stat.lmd = "Last modified: Day: "
stat.lad = "Last accessed: Day: "
stat.perms = "Permissions:"
stat.admin ="admin"
stat.guest="guest"
stat.app="app"
stat.evry1="everyone"
-- Df
df = {}
df.usage = "Usage: df [file/folder]\nReturns: The ammount of space that file or folder takes up."
df.badpriv = "Insufficient privileges to access "
df.warnbadpriv1="Warning - Did not have sufficient privileges to open file "
df.warnbadpriv2=". Will be excluded from count."
df.errorTotalSpace1="(1) An error occurred getting the total space of a file."
df.errorTotalSpace2="(2) An error occurred getting the total space of a file."
